{"name":"Justtexts","tagline":"Simple administration of multi-language (i18n) texts via Web Browser.","body":"# JustTexts\r\n\r\nMulti language text administration tool.\r\n\r\nThe purpose of this tool is to administer text containers for multiple languages via a browser and place it in i18n\r\ncompatible format in the file system to be used in all kinds of programming languages, either backend or frontend.\r\n\r\nWith JavaScript, the texts can be used via i18n.js (see: http://github.com/requirejs/i18n for details).\r\n\r\n## Setup\r\n\r\nThis package requires JustAPI as REST API backend, so checkout JustAPI into vendor/justso/justapi.\r\nCheckout this package into vendor/justso/justtexts\r\nAdd a 'language' attribute to config.json file from JustAPI containing a list of language codes you want to use.\r\n\r\nExample:\r\n\r\n```\r\n\"language\": [\"de\", \"en\", \"fr\"]\r\n```\r\n\r\nAlter your Apache config file to point the '/justtexts' directory to the JavaScript part of the package and for easy\r\naccess to required libraries:\r\n\r\n```\r\nAlias /justtexts /path/to/my/project/vendor/justso/justtexts/frontend\r\nAlias /vendor /path/to/my/project/vendor\r\n```\r\n\r\nAfter reloading the apache configuration (\"service apache2 reload\") the application should be accessible via\r\nhttp://your-server.example.com/justtexts/\r\n\r\n## Usage of text administration\r\n\r\nTexts are grouped as 'pages'. So, at first, create a page in the list and give it a name. It is good practice to use\r\nthe same name as the html page's name (not the title), so if your URL is http://your-server.example.com/my-page.html, it\r\nwould be easy for you to find the corresponding texts later if you name the page 'my-page'.\r\n\r\nCreating a page is easy: just press the \"Add page\" button and click on the \"Name\" field in the empty list row. After\r\nentering a name and leaving the field (by clicking somewhere else or pressing the tab button) the page is created.\r\nChanging the name is easy as well: just click on the name and change it. Again, the change is made persisting when you\r\nleave the field. By moving the mouse over the row, a 'x' icon is displayed at the right of the row, allowing you to\r\ndelete the page.\r\n\r\nAfter creating a page, a second list is displayed right of the first one. There you see all texts yet defined in this\r\npage - none. With the \"Add text\" button you can create new text blocks for the page, each having a unique name and the\r\ntext itself. The text is later accessed via its unique name. Creating, altering or deleting texts is just the same as\r\nwith pages. Just WYSIWYG.\r\n\r\n## Accessing texts\r\n\r\nTexts are placed in a directory 'htdocs/nls' in JavaScript files compatible to i18n.js (see above) and can be accessed\r\nwith this package, which is a require.js plugin. So, just require \"i18n!my-page\" in your AMD module to access texts for\r\nyour page with the name 'my-page'. The names of the text containers are the names of the parameter's attributes. i18n\r\ntakes care of loading the texts in the language your user prefers - if it exists. Else, it defaults to the language\r\ndefined first in your config.json file.\r\n\r\n## Translation\r\n\r\nTranslation means calling the administration and changing the language to the desired one. The text in the base language\r\n(this is the language defined first in your config.json file) is displayed side by side for each text container to make\r\ntranslation easier.\r\n\r\nJustTexts takes care on texts changed after translations. So, if your text in the base language is changed, the texts in\r\nthe container of all other languages is marked as outdated. In the administration, outdated texts are marked in red, so\r\nit is relatively easy to find such texts and re-translate them if necessary.\r\n\r\n## Support & More\r\n\r\nIf you need support, please contact us: http://justso.de","google":"UA-54643020-1","note":"Don't delete this file! It's used internally to help with page regeneration."}